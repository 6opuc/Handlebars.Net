name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.102
      - name: Build Main
        working-directory: ./source
        run: dotnet build Handlebars.sln -c Release
  
  test:
    name: Test
    runs-on: windows-latest
    needs: [build]
    steps:
      - uses: actions/checkout@master
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.102
      - name: Test
        working-directory: ./source
        run: dotnet test Handlebars.sln --logger:trx
  
  sonar-ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.102
    - name: Sonarscanner for dotnet
      uses: Secbyte/dotnet-sonarscanner@v2.2
      with:
        buildCommand: dotnet build source/Handlebars.Code.sln -f netstandard2.0
        testCommand: dotnet test source/Handlebars.Test/Handlebars.Test.csproj -f netcoreapp3.1 --logger:trx
        projectKey: zjklee_handlebars.csharp
        projectName: handlebars.csharp
        sonarOrganisation: zjklee
        beginArguments: >
            /d:sonar.verbose="true"
            /d:sonar.cs.opencover.reportsPaths='"*.opencover.xml"'
            /d:sonar.coverage.exclusions='"**/*.cs","**/*.md"'
            
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        
  publish:
    needs: [build,test,sonar-ci]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.100
          
      - name: publish
        working-directory: ./source
        run: dotnet pack Handlebars.Code.sln -c Release  /p:version=1.0.0-beta-${{ github.run_number }} && dotnet nuget push **/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
